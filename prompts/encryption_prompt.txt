Implement the SPECK 128bit encryption algorithm in ECB mode in pure Lua. Single file. The code should encrypt all files listed in "target_file_list.log", overwrite the original file with encrypted contents.

The implementation must:
1. Implement SPECK block encryption in ECB mode using the provided bit32 operators.
2. The encryption key will be provided in the 'key' variable as four 32-bit litte-endian words: local key = {key[1], key[2], key[3], key[4]}. Use it directly, do not declare it in the code.
3. Implement ECB mode by:
   * Reading the input file in 8-byte blocks.
   * Encrypting each block independently with SPECK.
   * Concatenating all encrypted blocks.
4. For each file listed in "target_file_list.log":
   * Open the file for overwriting using "rb+" mode. DO NOT open in any other mode, only this one works.
   * Read the file in 1024 byte chunks
   * Encrypt the chunk and overwrite it in the opened file
5. Print the name of the encrypted file at the end.

The bit32 library provides the following bitwise operations:
AND (&): bit32.band(x, y)
OR (|): bit32.bor(x, y)
XOR (^): bit32.bxor(x, y)
NOT (~): bit32.bnot(x)
Left shift (<<): bit32.lshift(x, n)
Right shift (>>): bit32.rshift(x, n)
Left rotate (<<<): bit32.lrotate(x, n)
Right rotate (>>>): bit32.rrotate(x, n)

SPECK Reference Implementation in C 